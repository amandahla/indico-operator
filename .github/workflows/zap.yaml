name: Zap test

on:
  workflow_dispatch:
    inputs:
      zap-auth-header:
        description: if this is defined then its value will be added as a header to all of the ZAP requests
        type: string
      zap-auth-header-value:
        description:  if this is defined then its value will be used as the header name to all of the ZAP requests
        type: string
    outputs:
      images:
        description: Pushed docker images
        value: ${{ jobs.get-images.outputs.images }}

env:
  REGISTRY: ghcr.io
  OWNER: ${{ github.repository_owner }}

jobs:
  get-runner-image:
    name: Get runner image
    uses: ./.github/workflows/get_runner_image.yaml
  get-images:
    name: Get images
    runs-on: ubuntu-22.04
    outputs:
      images: ${{ env.DOCKER_IMAGES }}
    steps:
      - uses: actions/checkout@v3
      - name: Get dockerfiles
        run: echo "DOCKER_IMAGES=$(ls *.Dockerfile 2> /dev/null | sed s/\.Dockerfile// |  jq -Rsc '. / "\n" - [""]')" >> $GITHUB_ENV
  build-images:
    name: Build image
    runs-on: ${{ needs.get-runner-image.outputs.runs-on }}
    needs: [get-images, get-runner-image]
    if: ${{ needs.get-images.outputs.images != '[]' }}
    strategy:
      matrix:
        image: ${{ fromJSON(needs.get-images.outputs.images) }}
    steps:
      - uses: actions/checkout@v3
      - name: Log in to the Container registry
        if: ${{ !github.event.pull_request.head.repo.fork }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image
        uses: docker/build-push-action@v3
        if: ${{ !github.event.pull_request.head.repo.fork }}
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ matrix.image }}:${{ github.run_id }}
          file: ${{ matrix.image }}.Dockerfile
      # GitHub doesn't currently support pushing images in the Docker registry when opening a PR from a fork
      # so an artifact is published instead
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        if: ${{ github.event.pull_request.head.repo.fork }}
      - name: Build image as tarball
        uses: docker/build-push-action@v3
        if: ${{ github.event.pull_request.head.repo.fork }}
        with:
          context: .
          file: ${{ matrix.image }}.Dockerfile
          tags: localhost:32000/${{ matrix.image }}:latest
          outputs: type=docker,dest=/tmp/${{ matrix.image }}.tar
      - name: Upload image artifact
        uses: actions/upload-artifact@v3
        if: ${{ github.event.pull_request.head.repo.fork }}
        with:
          name: ${{ matrix.image }}
          path: /tmp/${{ matrix.image }}.tar

  zap-test:
    name: Zap test
    runs-on: ${{ needs.get-runner-image.outputs.runs-on }}
    needs: [get-images, get-runner-image, build-images]
    if: ${{ !failure() }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
          provider: microk8s
      - name: Enable microk8s registry
        run: |
          sudo microk8s enable registry
          sudo microk8s kubectl -n container-registry rollout status -w deployment/registry
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        if: ${{ github.event.pull_request.head.repo.fork }}
      - name: Push images to microk8s registry
        run: |
          for image_name in $(echo '${{ needs.get-images.outputs.images }}' | jq -cr '.[]'); do
            docker load --input ${image_name}/${image_name}.tar
            docker push localhost:32000/${image_name}:latest
          done
      - name: Configure GHCR in microk8s
        run: |
          # Adding authentication for ghcr.io for containerd as per https://microk8s.io/docs/registry-private
          # Note: containerd has to be restarted for the changes to take effect
          # (https://github.com/containerd/cri/blob/master/docs/registry.md)
          sudo su -c 'echo "
          [plugins.\"io.containerd.grpc.v1.cri\".registry.configs.\"ghcr.io\".auth]
          username = \"${{ github.actor }}\"
          password = \"${{ secrets.GITHUB_TOKEN }}\"
          " >> /var/snap/microk8s/current/args/containerd-template.toml'
          sudo su -c 'systemctl restart snap.microk8s.daemon-containerd.service && microk8s status --wait-ready'
      - name: Enable microk8s ingress
        run: |
          sudo microk8s enable ingress
      - name: Setting up Indico unit IP ENV for Github Zap Action
        run: echo ::set-env name=INDICO_UNIT_IP::$(juju show-unit indico/0 --format=json | jq -r '.["indico/0"]["address"]')
      - name: Run OWASP ZAP Full Scan
        uses: zaproxy/action-full-scan@v0.4.0
        env:
          ZAP_AUTH_HEADER:  ${{ inputs.zap-auth-header }}
          ZAP_AUTH_HEADER_VALUE:  ${{ inputs.zap-auth-header-value  }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target: http://${{ env.INDICO_UNIT_IP }}:8080/
      - name: Dump logs
        uses: canonical/charm-logdump-action@main
        if: failure()
        with:
          app: ${{ env.CHARM_NAME }}
          model: testing